3/3 공휴일
3/4 예비군
3/5 
4주차 마지막에 ros에서 전송한 영상을 pc에서 yolo를 적용하여 분석후 조건을 만족하면
ros의 부져가 울리는 동작을 구현하려고했으나 실패
기존에 사용하려고한 방식은 yolo가 적용된 py파일에서 WebSocke을을 열어 ros가 제공하고있는 WebSocket과 연동하여
ros의 서비스를 이용하려는 계획을 잡았으나 실행하기 위해서 새로운 Flask 서버를 열고 하는 과정이 번거롭고 연동이
원하라게 되지 않았음
따라서 새로운 방식으로 py 파일에서 직접적으로 ros의 서비스에 접근하는 방식을 사용

방식은 roslibpy를 사용하는것으로 해결을함

추가적으로 yolo의 동작을 설명하면
영상 받아오기 -> yolo 분석 -> 조건만족시 이미지(원본) 저장 및 ros서비스 동작
으로 구성되어 있다.


3/6
학습된 yolo 모델줄 입주민 모델이 있는데 기존에 차량의 해당 모델을 적용하려했으나 흉기를 감지하는 모델로
변경하게 되면서 사용하지 않음 따라서 이 모델을 적용하기 위해서 추가적으로 아파트 출입을 제어하는 시스템을 추가적으로 구성할 계획
방식은 아파트 출입시스템을 생각하면 됨
아파트 입구에 달린 카메라에서 화면에 입주민(yolo 모델에 학습된것)이 보이면 차단기를 올려주고 입주민이 아닌 사람이 감지되면
열리지 않음 추가적으로 웹에서 출입구를 열어주는 버튼을 클릭하면 열리도록 계획

우선 Arduino와 웹캠을 이용해서 구현할 계획이고 Arduino에서 WiFi를 이용하여 PC에서 네트워크를 제공하여
무선으로 정보를 송수신 하는 시스템을 구현할 계획

동작은 간단하게 yolo 모델의 조건을 만족하면 아두이노의 모터를 90도 돌리고 일정시간이 지나면 자동으로 닫히게 설정해둠

카메라의 인식하는 빈도를 조절하여 10초간격으로 주민인지 판단하고 문을 열어주도록 동작하게함

추가적인 동작은 최종적으로 db와 통합하면서 추가할 계획