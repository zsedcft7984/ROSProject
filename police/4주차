02/24 
3주차 마지막에 베터리 Topic을 하고있었음 
문제가 되었던 것은 1. thread 처리 2. sub가 안뜨는 오류가 주된 이유였는데
우선 1번의 경우 지금 ros 코드에서 결과를 확인하기 위해 임시로 사용하고 있는 stream에서 같은 코드를 사용하고 있어
해당 코드가 실행중이기 떄문에 베터리 토픽관련 코드가 동작하지 않음
해결하는 방법은 단순했는데 init에서 영상보다 먼저 선언을 하는것으로 해결하고 
기존에 thread를 사용할려했는데 Timer라는 rospy에서 재공하는 기능을 사용해 일정시간마다 베터리정보를 보내주도록함
Timer 또한 실행시 별도의 스레드로 처리한다고함

2번오류의 경우 계속해서 sub가 인식이 되지 않는 문제가 있었는데 그이유는 battery_control에서 window.onload를 사용했는데
뒤에 만들어두었던 motor_control에서도 같은 코드를 호출하고 있어서 두 코드가 둘다 먹통이 되었음


홈페이지에서 ros 자동차 제어가 가능하도록 구성함

but
방향 동작 누르면 motor_controlResponse errror가 자꾸 생김
이 에러르 해결하기 위해서 
입ㅈ윌
<할일>
학습한 모델을 적용하여 모델에 따른 반응


02/26
ros 차량과 외부 pc와의 명령시 동작 과정에서 매끄럽지 않은 부분 수정 중
1. 부저 수정 
기존의 부저는 on/off 버튼으로 되어 있었는데 토글 버튼으로 변경함
기존의 on 시 부저는 단순히 1의 신호가 가고 부저음이 계속해서 울리는 동작이였는데
ros 쪽에 추가적으로 1일때 Timer를 통해 일정 간격으로 울렸다 끊켰다 하는 동작을 추가함 

2.수동 조작 관련 수정
수동 조작관련 서비스에서 기존 서비스에서 모터 정지 상태에서 속도 변화 버튼을 누르면 속도가 바뀌면서 자동으로 차량이 앞으로 움직였음
이유는 stop 버튼은 단순히 모터를 정지시키고 해당 상태를 유지하는 기능이 없었기 때문에 정지상태에서 속도변화를 누르면
움직이는게 맞는 동작이였음 따라서 stop시 만들어두었던 is_motor_stop와 motro_stop 기능을 사용하여 모터의 정지상태를 반영하도록 하고
속도 제어하는 동작에서 if 조건을 변경하여 적절하게 속도가 반영되도록 함 추가적으로 정지상태에서 변경된 속도는 해당 수동 코드 내에서 저장되어
정지상태의 해제 ( forwar, backword 등) 과 같은 움직임 명령이 있으면 반영된 속도로 해당 동작을 하도록 구현해둠

3. 라인주행 테스트를 위해 새로 라인을 만들었음 기존에 라인의 경우 굴곡이 많아 따로 뒷바퀴가 존재하지 않는 차량 특성상
해당 굴곡으로 인해 정상적인 테스트가 어려웠음 

but 기존에 구상으로는 파란색 라인과 빨간색 라인을 따라가는 2대의 구성으로 계획하였으나
파란색은 인식이 잘되는데 빨간색의 경우 인식률이 떨어지는 것을 알게됨 이유는 라인이 테이프로 되어있어 빛에 민감하고
ros 차량에서 라인트레이싱할때 HSV를 사용하기 때문에 이런 빛의 대하여 민감하게 반응한느거 같음

<할일>
다른 색상을 추적하여 안정적인 성능이 나오도록함
ros 에서 usb 웹캠을통해 영상을 전달 -> 학습된 모델에 적용 -> 원하는 이미치를 추출 -> 데이터 베이스에 저장
위의 과정을 테스트 해봐야됨 테스트 과정에서 ros나 서비스를 전달하는 js의 수정이 필요할듯
수동 조작 버튼 클릭시 rosbridge에 오류메시지가 뜸 전체적인 장치 구동에는 문제가 되지 않는데 일단 오류 이므로 해결해야할듯
예상하는 이유는 service의 경우 Response가 있어 return을 해줘야 하는 상황에서 새로운 서비스를 만들어 동작을 하다보니 Response를
따로 정의하지 않았음 그래서 그냥 결과가 boolean 값이므로 return True 로 쓰며 넘겨놨는데 이게 문제가 된듯싶음

02/27

수동조작 관련
: 수동조작시 rosbridge 터미널에 예상하지 못한 오류가 발생했는데 우선 해결해 두었으나 정확한 이유를 특정할 수 없다.
우선 해결한 방법은 ros에서 서비스 build시 자동으로  workspace/catkin_ws/devel/lib/python2.7/dist-packages/jetbotmini_msgs/srv 에 _서비스이름.py 파일이 생성되고
이 파일에 서비스이름Request, Response 등 이 자동으로 생성되게 된다. 그래서 파일을 확인해보니 Response쪽에 이상이 있었는데
Response가 어떠한 값도 받지 않는 다는걸 알게 되었고 따라서 함수의 return 값을
retrun MotorControlResponse() 로 ()를 빈칸으로 설정하니 해결됨
이 오류가 생긴 이유는 추측으로 초기화된 ros를 복구하던 중  srv 파일을 만들때 
#request 
---
#response 
위와 같은 형식으로 만들어야 했는데
#request

#response
로 만들어서 그렇게 된것이라고 추측중이다.

02/28
ros 코드 간단한 수정 및
yolo 모델을 ros 차량에서 전송받은 영상을 받아서 적용 시키는 것
상용한 방법은 websoket을 생성하여 ros 의 websoket과 연동하여 정보를 주고받게 하는것
연결이 원하하게 되지않음
